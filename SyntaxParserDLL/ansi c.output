Useless nonterminals:

   storage_class_specifier
   specifier_qualifier_list
   enum_specifier
   enumerator_list
   enumerator


Terminals which are not used:

   STRING_LITERAL
   SIZEOF
   PTR_OP
   LEFT_OP
   RIGHT_OP
   TYPE_NAME
   TYPEDEF
   EXTERN
   STATIC
   AUTO
   REGISTER
   CONST
   VOLATILE
   STRUCT
   UNION
   ENUM


Useless rules:

#63    storage_class_specifier :	 TYPEDEF;
#64    storage_class_specifier :	 EXTERN;
#65    storage_class_specifier :	 STATIC;
#66    storage_class_specifier :	 AUTO;
#67    storage_class_specifier :	 REGISTER;
#77    specifier_qualifier_list :	 type_specifier;
#78    enum_specifier :	 ENUM '{' enumerator_list '}';
#79    enum_specifier :	 ENUM IDENTIFIER '{' enumerator_list '}';
#80    enum_specifier :	 ENUM IDENTIFIER;
#81    enumerator_list :	 enumerator;
#82    enumerator_list :	 enumerator_list ',' enumerator;
#83    enumerator :	 IDENTIFIER;
#84    enumerator :	 IDENTIFIER '=' constant_expression;


State 209 contains 1 shift/reduce conflict.

Grammar
rule 1    primary_expression -> IDENTIFIER
rule 2    primary_expression -> CONSTANT
rule 3    primary_expression -> '(' expression ')'
rule 4    postfix_expression -> primary_expression
rule 5    postfix_expression -> postfix_expression INC_OP
rule 6    postfix_expression -> postfix_expression DEC_OP
rule 7    unary_expression -> postfix_expression
rule 8    unary_expression -> INC_OP unary_expression
rule 9    unary_expression -> DEC_OP unary_expression
rule 10   unary_expression -> unary_operator unary_expression
rule 11   unary_operator -> '+'
rule 12   unary_operator -> '-'
rule 13   unary_operator -> '!'
rule 14   multiplicative_expression -> unary_expression
rule 15   multiplicative_expression -> multiplicative_expression '*' unary_expression
rule 16   multiplicative_expression -> multiplicative_expression '/' unary_expression
rule 17   multiplicative_expression -> multiplicative_expression '%' unary_expression
rule 18   additive_expression -> multiplicative_expression
rule 19   additive_expression -> additive_expression '+' multiplicative_expression
rule 20   additive_expression -> additive_expression '-' multiplicative_expression
rule 21   shift_expression -> additive_expression
rule 22   relational_expression -> shift_expression
rule 23   relational_expression -> relational_expression '<' shift_expression
rule 24   relational_expression -> relational_expression '>' shift_expression
rule 25   relational_expression -> relational_expression LE_OP shift_expression
rule 26   relational_expression -> relational_expression GE_OP shift_expression
rule 27   equality_expression -> relational_expression
rule 28   equality_expression -> equality_expression EQ_OP relational_expression
rule 29   equality_expression -> equality_expression NE_OP relational_expression
rule 30   and_expression -> equality_expression
rule 31   and_expression -> and_expression '&' equality_expression
rule 32   exclusive_or_expression -> and_expression
rule 33   inclusive_or_expression -> exclusive_or_expression
rule 34   logical_and_expression -> inclusive_or_expression
rule 35   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 36   logical_or_expression -> logical_and_expression
rule 37   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
rule 38   conditional_expression -> logical_or_expression
rule 39   conditional_expression -> logical_or_expression '?' expression ':' conditional_expression
rule 40   assignment_expression -> conditional_expression
rule 41   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 42   assignment_operator -> '='
rule 43   assignment_operator -> MUL_ASSIGN
rule 44   assignment_operator -> DIV_ASSIGN
rule 45   assignment_operator -> MOD_ASSIGN
rule 46   assignment_operator -> ADD_ASSIGN
rule 47   assignment_operator -> SUB_ASSIGN
rule 48   assignment_operator -> LEFT_ASSIGN
rule 49   assignment_operator -> RIGHT_ASSIGN
rule 50   assignment_operator -> AND_ASSIGN
rule 51   assignment_operator -> XOR_ASSIGN
rule 52   assignment_operator -> OR_ASSIGN
rule 53   expression -> assignment_expression
rule 54   expression -> expression ',' assignment_expression
rule 55   constant_expression -> conditional_expression
rule 56   declaration -> declaration_specifiers ';'
rule 57   declaration -> declaration_specifiers init_declarator_list ';'
rule 58   declaration_specifiers -> type_specifier
rule 59   init_declarator_list -> init_declarator
rule 60   init_declarator_list -> init_declarator_list ',' init_declarator
rule 61   init_declarator -> declarator
rule 62   init_declarator -> declarator '=' initializer
rule 68   type_specifier -> VOID
rule 69   type_specifier -> CHAR
rule 70   type_specifier -> SHORT
rule 71   type_specifier -> INT
rule 72   type_specifier -> LONG
rule 73   type_specifier -> FLOAT
rule 74   type_specifier -> DOUBLE
rule 75   type_specifier -> SIGNED
rule 76   type_specifier -> UNSIGNED
rule 85   declarator -> direct_declarator
rule 86   direct_declarator -> IDENTIFIER
rule 87   direct_declarator -> '(' declarator ')'
rule 88   direct_declarator -> direct_declarator '[' constant_expression ']'
rule 89   direct_declarator -> direct_declarator '[' ']'
rule 90   direct_declarator -> direct_declarator '(' parameter_type_list ')'
rule 91   direct_declarator -> direct_declarator '(' identifier_list ')'
rule 92   direct_declarator -> direct_declarator '(' ')'
rule 93   parameter_type_list -> parameter_list
rule 94   parameter_type_list -> parameter_list ',' ELLIPSIS
rule 95   parameter_list -> parameter_declaration
rule 96   parameter_list -> parameter_list ',' parameter_declaration
rule 97   parameter_declaration -> declaration_specifiers declarator
rule 98   parameter_declaration -> declaration_specifiers
rule 99   identifier_list -> IDENTIFIER
rule 100  identifier_list -> identifier_list ',' IDENTIFIER
rule 101  initializer -> assignment_expression
rule 102  initializer -> '{' initializer_list '}'
rule 103  initializer -> '{' initializer_list ',' '}'
rule 104  initializer_list -> initializer
rule 105  initializer_list -> initializer_list ',' initializer
rule 106  statement -> labeled_statement
rule 107  statement -> compound_statement
rule 108  statement -> expression_statement
rule 109  statement -> selection_statement
rule 110  statement -> iteration_statement
rule 111  statement -> jump_statement
rule 112  labeled_statement -> IDENTIFIER ':' statement
rule 113  labeled_statement -> CASE constant_expression ':' statement
rule 114  labeled_statement -> DEFAULT ':' statement
rule 115  compound_statement -> '{' '}'
rule 116  compound_statement -> '{' statement_list '}'
rule 117  compound_statement -> '{' declaration_list '}'
rule 118  compound_statement -> '{' declaration_list statement_list '}'
rule 119  declaration_list -> declaration
rule 120  declaration_list -> declaration_list declaration
rule 121  statement_list -> statement
rule 122  statement_list -> statement_list statement
rule 123  expression_statement -> ';'
rule 124  expression_statement -> expression ';'
rule 125  selection_statement -> IF '(' expression ')' statement
rule 126  selection_statement -> IF '(' expression ')' statement ELSE statement
rule 127  selection_statement -> SWITCH '(' expression ')' statement
rule 128  iteration_statement -> WHILE '(' expression ')' statement
rule 129  iteration_statement -> DO statement WHILE '(' expression ')' ';'
rule 130  iteration_statement -> FOR '(' expression_statement expression_statement ')' statement
rule 131  iteration_statement -> FOR '(' expression_statement expression_statement expression ')' statement
rule 132  jump_statement -> GOTO IDENTIFIER ';'
rule 133  jump_statement -> CONTINUE ';'
rule 134  jump_statement -> BREAK ';'
rule 135  jump_statement -> RETURN ';'
rule 136  jump_statement -> RETURN expression ';'
rule 137  translation_unit -> external_declaration
rule 138  translation_unit -> translation_unit external_declaration
rule 139  external_declaration -> function_definition
rule 140  external_declaration -> declaration
rule 141  function_definition -> declaration_specifiers declarator declaration_list compound_statement
rule 142  function_definition -> declaration_specifiers declarator compound_statement
rule 143  function_definition -> declarator declaration_list compound_statement
rule 144  function_definition -> declarator compound_statement

Terminals, with rules where they appear

$ (-1)
'!' (33) 13
'%' (37) 17
'&' (38) 31
'(' (40) 3 87 90 91 92 125 126 127 128 129 130 131
')' (41) 3 87 90 91 92 125 126 127 128 129 130 131
'*' (42) 15
'+' (43) 11 19
',' (44) 54 60 94 96 100 103 105
'-' (45) 12 20
'/' (47) 16
':' (58) 39 112 113 114
';' (59) 56 57 123 124 129 132 133 134 135 136
'<' (60) 23
'=' (61) 42 62 84
'>' (62) 24
'?' (63) 39
'[' (91) 88 89
']' (93) 88 89
'{' (123) 78 79 102 103 115 116 117 118
'}' (125) 102 103 115 116 117 118
error (256)
IDENTIFIER (258) 1 79 80 83 84 86 99 100 112 132
CONSTANT (259) 2
STRING_LITERAL (260)
SIZEOF (261)
PTR_OP (262)
INC_OP (263) 5 8
DEC_OP (264) 6 9
LEFT_OP (265)
RIGHT_OP (266)
LE_OP (267) 25
GE_OP (268) 26
EQ_OP (269) 28
NE_OP (270) 29
AND_OP (271) 35
OR_OP (272) 37
MUL_ASSIGN (273) 43
DIV_ASSIGN (274) 44
MOD_ASSIGN (275) 45
ADD_ASSIGN (276) 46
SUB_ASSIGN (277) 47
LEFT_ASSIGN (278) 48
RIGHT_ASSIGN (279) 49
AND_ASSIGN (280) 50
XOR_ASSIGN (281) 51
OR_ASSIGN (282) 52
TYPE_NAME (283)
TYPEDEF (284) 63
EXTERN (285) 64
STATIC (286) 65
AUTO (287) 66
REGISTER (288) 67
CHAR (289) 69
SHORT (290) 70
INT (291) 71
LONG (292) 72
SIGNED (293) 75
UNSIGNED (294) 76
FLOAT (295) 73
DOUBLE (296) 74
CONST (297)
VOLATILE (298)
VOID (299) 68
STRUCT (300)
UNION (301)
ENUM (302) 78 79 80
ELLIPSIS (303) 94
CASE (304) 113
DEFAULT (305) 114
IF (306) 125 126
ELSE (307) 126
SWITCH (308) 127
WHILE (309) 128 129
DO (310) 129
FOR (311) 130 131
GOTO (312) 132
CONTINUE (313) 133
BREAK (314) 134
RETURN (315) 135 136

Nonterminals, with rules where they appear

primary_expression (81)
    on left: 1 2 3, on right: 4
postfix_expression (82)
    on left: 4 5 6, on right: 5 6 7
unary_expression (83)
    on left: 7 8 9 10, on right: 8 9 10 14 15 16 17 41
unary_operator (84)
    on left: 11 12 13, on right: 10
multiplicative_expression (85)
    on left: 14 15 16 17, on right: 15 16 17 18 19 20
additive_expression (86)
    on left: 18 19 20, on right: 19 20 21
shift_expression (87)
    on left: 21, on right: 22 23 24 25 26
relational_expression (88)
    on left: 22 23 24 25 26, on right: 23 24 25 26 27 28 29
equality_expression (89)
    on left: 27 28 29, on right: 28 29 30 31
and_expression (90)
    on left: 30 31, on right: 31 32
exclusive_or_expression (91)
    on left: 32, on right: 33
inclusive_or_expression (92)
    on left: 33, on right: 34 35
logical_and_expression (93)
    on left: 34 35, on right: 35 36 37
logical_or_expression (94)
    on left: 36 37, on right: 37 38 39
conditional_expression (95)
    on left: 38 39, on right: 39 40 55
assignment_expression (96)
    on left: 40 41, on right: 41 53 54 101
assignment_operator (97)
    on left: 42 43 44 45 46 47 48 49 50 51 52, on right: 41
expression (98)
    on left: 53 54, on right: 3 39 54 124 125 126 127 128 129 131 136
constant_expression (99)
    on left: 55, on right: 84 88 113
declaration (100)
    on left: 56 57, on right: 119 120 140
declaration_specifiers (101)
    on left: 58, on right: 56 57 97 98 141 142
init_declarator_list (102)
    on left: 59 60, on right: 57 60
init_declarator (103)
    on left: 61 62, on right: 59 60
type_specifier (104)
    on left: 68 69 70 71 72 73 74 75 76, on right: 58 77
declarator (105)
    on left: 85, on right: 61 62 87 97 141 142 143 144
direct_declarator (106)
    on left: 86 87 88 89 90 91 92, on right: 85 88 89 90 91 92
parameter_type_list (107)
    on left: 93 94, on right: 90
parameter_list (108)
    on left: 95 96, on right: 93 94 96
parameter_declaration (109)
    on left: 97 98, on right: 95 96
identifier_list (110)
    on left: 99 100, on right: 91 100
initializer (111)
    on left: 101 102 103, on right: 62 104 105
initializer_list (112)
    on left: 104 105, on right: 102 103 105
statement (113)
    on left: 106 107 108 109 110 111, on right: 112 113 114 121 122
    125 126 127 128 129 130 131
labeled_statement (114)
    on left: 112 113 114, on right: 106
compound_statement (115)
    on left: 115 116 117 118, on right: 107 141 142 143 144
declaration_list (116)
    on left: 119 120, on right: 117 118 120 141 143
statement_list (117)
    on left: 121 122, on right: 116 118 122
expression_statement (118)
    on left: 123 124, on right: 108 130 131
selection_statement (119)
    on left: 125 126 127, on right: 109
iteration_statement (120)
    on left: 128 129 130 131, on right: 110
jump_statement (121)
    on left: 132 133 134 135 136, on right: 111
translation_unit (122)
    on left: 137 138, on right: 138
external_declaration (123)
    on left: 139 140, on right: 137 138
function_definition (124)
    on left: 141 142 143 144, on right: 139


state 0

    IDENTIFIER	shift, and go to state 1
    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    '(' 	shift, and go to state 11

    declaration	go to state 12
    declaration_specifiers	go to state 13
    type_specifier	go to state 14
    declarator	go to state 15
    direct_declarator	go to state 16
    translation_unit	go to state 17
    external_declaration	go to state 18
    function_definition	go to state 19



state 1

    direct_declarator  ->  IDENTIFIER .   (rule 86)

    $default	reduce using rule 86 (direct_declarator)



state 2

    type_specifier  ->  CHAR .   (rule 69)

    $default	reduce using rule 69 (type_specifier)



state 3

    type_specifier  ->  SHORT .   (rule 70)

    $default	reduce using rule 70 (type_specifier)



state 4

    type_specifier  ->  INT .   (rule 71)

    $default	reduce using rule 71 (type_specifier)



state 5

    type_specifier  ->  LONG .   (rule 72)

    $default	reduce using rule 72 (type_specifier)



state 6

    type_specifier  ->  SIGNED .   (rule 75)

    $default	reduce using rule 75 (type_specifier)



state 7

    type_specifier  ->  UNSIGNED .   (rule 76)

    $default	reduce using rule 76 (type_specifier)



state 8

    type_specifier  ->  FLOAT .   (rule 73)

    $default	reduce using rule 73 (type_specifier)



state 9

    type_specifier  ->  DOUBLE .   (rule 74)

    $default	reduce using rule 74 (type_specifier)



state 10

    type_specifier  ->  VOID .   (rule 68)

    $default	reduce using rule 68 (type_specifier)



state 11

    direct_declarator  ->  '(' . declarator ')'   (rule 87)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 11

    declarator	go to state 20
    direct_declarator	go to state 16



state 12

    external_declaration  ->  declaration .   (rule 140)

    $default	reduce using rule 140 (external_declaration)



state 13

    declaration  ->  declaration_specifiers . ';'   (rule 56)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 57)
    function_definition  ->  declaration_specifiers . declarator declaration_list compound_statement   (rule 141)
    function_definition  ->  declaration_specifiers . declarator compound_statement   (rule 142)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 11
    ';' 	shift, and go to state 21

    init_declarator_list	go to state 22
    init_declarator	go to state 23
    declarator	go to state 24
    direct_declarator	go to state 16



state 14

    declaration_specifiers  ->  type_specifier .   (rule 58)

    $default	reduce using rule 58 (declaration_specifiers)



state 15

    function_definition  ->  declarator . declaration_list compound_statement   (rule 143)
    function_definition  ->  declarator . compound_statement   (rule 144)

    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    '{' 	shift, and go to state 25

    declaration	go to state 26
    declaration_specifiers	go to state 27
    type_specifier	go to state 14
    compound_statement	go to state 28
    declaration_list	go to state 29



state 16

    declarator  ->  direct_declarator .   (rule 85)
    direct_declarator  ->  direct_declarator . '[' constant_expression ']'   (rule 88)
    direct_declarator  ->  direct_declarator . '[' ']'   (rule 89)
    direct_declarator  ->  direct_declarator . '(' parameter_type_list ')'   (rule 90)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 91)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 92)

    '(' 	shift, and go to state 30
    '[' 	shift, and go to state 31

    $default	reduce using rule 85 (declarator)



state 17

    translation_unit  ->  translation_unit . external_declaration   (rule 138)

    $   	go to state 223
    IDENTIFIER	shift, and go to state 1
    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    '(' 	shift, and go to state 11

    declaration	go to state 12
    declaration_specifiers	go to state 13
    type_specifier	go to state 14
    declarator	go to state 15
    direct_declarator	go to state 16
    external_declaration	go to state 32
    function_definition	go to state 19



state 18

    translation_unit  ->  external_declaration .   (rule 137)

    $default	reduce using rule 137 (translation_unit)



state 19

    external_declaration  ->  function_definition .   (rule 139)

    $default	reduce using rule 139 (external_declaration)



state 20

    direct_declarator  ->  '(' declarator . ')'   (rule 87)

    ')' 	shift, and go to state 33



state 21

    declaration  ->  declaration_specifiers ';' .   (rule 56)

    $default	reduce using rule 56 (declaration)



state 22

    declaration  ->  declaration_specifiers init_declarator_list . ';'   (rule 57)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 60)

    ',' 	shift, and go to state 34
    ';' 	shift, and go to state 35



state 23

    init_declarator_list  ->  init_declarator .   (rule 59)

    $default	reduce using rule 59 (init_declarator_list)



state 24

    init_declarator  ->  declarator .   (rule 61)
    init_declarator  ->  declarator . '=' initializer   (rule 62)
    function_definition  ->  declaration_specifiers declarator . declaration_list compound_statement   (rule 141)
    function_definition  ->  declaration_specifiers declarator . compound_statement   (rule 142)

    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    '=' 	shift, and go to state 36
    '{' 	shift, and go to state 25

    $default	reduce using rule 61 (init_declarator)

    declaration	go to state 26
    declaration_specifiers	go to state 27
    type_specifier	go to state 14
    compound_statement	go to state 37
    declaration_list	go to state 38



state 25

    compound_statement  ->  '{' . '}'   (rule 115)
    compound_statement  ->  '{' . statement_list '}'   (rule 116)
    compound_statement  ->  '{' . declaration_list '}'   (rule 117)
    compound_statement  ->  '{' . declaration_list statement_list '}'   (rule 118)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25
    '}' 	shift, and go to state 59

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    declaration	go to state 26
    declaration_specifiers	go to state 27
    type_specifier	go to state 14
    statement	go to state 77
    labeled_statement	go to state 78
    compound_statement	go to state 79
    declaration_list	go to state 80
    statement_list	go to state 81
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 26

    declaration_list  ->  declaration .   (rule 119)

    $default	reduce using rule 119 (declaration_list)



state 27

    declaration  ->  declaration_specifiers . ';'   (rule 56)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 57)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 11
    ';' 	shift, and go to state 21

    init_declarator_list	go to state 22
    init_declarator	go to state 23
    declarator	go to state 86
    direct_declarator	go to state 16



state 28

    function_definition  ->  declarator compound_statement .   (rule 144)

    $default	reduce using rule 144 (function_definition)



state 29

    declaration_list  ->  declaration_list . declaration   (rule 120)
    function_definition  ->  declarator declaration_list . compound_statement   (rule 143)

    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    '{' 	shift, and go to state 25

    declaration	go to state 87
    declaration_specifiers	go to state 27
    type_specifier	go to state 14
    compound_statement	go to state 88



state 30

    direct_declarator  ->  direct_declarator '(' . parameter_type_list ')'   (rule 90)
    direct_declarator  ->  direct_declarator '(' . identifier_list ')'   (rule 91)
    direct_declarator  ->  direct_declarator '(' . ')'   (rule 92)

    IDENTIFIER	shift, and go to state 89
    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    ')' 	shift, and go to state 90

    declaration_specifiers	go to state 91
    type_specifier	go to state 14
    parameter_type_list	go to state 92
    parameter_list	go to state 93
    parameter_declaration	go to state 94
    identifier_list	go to state 95



state 31

    direct_declarator  ->  direct_declarator '[' . constant_expression ']'   (rule 88)
    direct_declarator  ->  direct_declarator '[' . ']'   (rule 89)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ']' 	shift, and go to state 97

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 99
    constant_expression	go to state 100



state 32

    translation_unit  ->  translation_unit external_declaration .   (rule 138)

    $default	reduce using rule 138 (translation_unit)



state 33

    direct_declarator  ->  '(' declarator ')' .   (rule 87)

    $default	reduce using rule 87 (direct_declarator)



state 34

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 60)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 11

    init_declarator	go to state 101
    declarator	go to state 86
    direct_declarator	go to state 16



state 35

    declaration  ->  declaration_specifiers init_declarator_list ';' .   (rule 57)

    $default	reduce using rule 57 (declaration)



state 36

    init_declarator  ->  declarator '=' . initializer   (rule 62)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    '{' 	shift, and go to state 102

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 103
    initializer	go to state 104



state 37

    function_definition  ->  declaration_specifiers declarator compound_statement .   (rule 142)

    $default	reduce using rule 142 (function_definition)



state 38

    declaration_list  ->  declaration_list . declaration   (rule 120)
    function_definition  ->  declaration_specifiers declarator declaration_list . compound_statement   (rule 141)

    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    '{' 	shift, and go to state 25

    declaration	go to state 87
    declaration_specifiers	go to state 27
    type_specifier	go to state 14
    compound_statement	go to state 105



state 39

    primary_expression  ->  IDENTIFIER .   (rule 1)
    labeled_statement  ->  IDENTIFIER . ':' statement   (rule 112)

    ':' 	shift, and go to state 106

    $default	reduce using rule 1 (primary_expression)



state 40

    primary_expression  ->  CONSTANT .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 41

    unary_expression  ->  INC_OP . unary_expression   (rule 8)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 107
    unary_operator	go to state 63



state 42

    unary_expression  ->  DEC_OP . unary_expression   (rule 9)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 108
    unary_operator	go to state 63



state 43

    labeled_statement  ->  CASE . constant_expression ':' statement   (rule 113)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 99
    constant_expression	go to state 109



state 44

    labeled_statement  ->  DEFAULT . ':' statement   (rule 114)

    ':' 	shift, and go to state 110



state 45

    selection_statement  ->  IF . '(' expression ')' statement   (rule 125)
    selection_statement  ->  IF . '(' expression ')' statement ELSE statement   (rule 126)

    '(' 	shift, and go to state 111



state 46

    selection_statement  ->  SWITCH . '(' expression ')' statement   (rule 127)

    '(' 	shift, and go to state 112



state 47

    iteration_statement  ->  WHILE . '(' expression ')' statement   (rule 128)

    '(' 	shift, and go to state 113



state 48

    iteration_statement  ->  DO . statement WHILE '(' expression ')' ';'   (rule 129)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    statement	go to state 114
    labeled_statement	go to state 78
    compound_statement	go to state 79
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 49

    iteration_statement  ->  FOR . '(' expression_statement expression_statement ')' statement   (rule 130)
    iteration_statement  ->  FOR . '(' expression_statement expression_statement expression ')' statement   (rule 131)

    '(' 	shift, and go to state 115



state 50

    jump_statement  ->  GOTO . IDENTIFIER ';'   (rule 132)

    IDENTIFIER	shift, and go to state 116



state 51

    jump_statement  ->  CONTINUE . ';'   (rule 133)

    ';' 	shift, and go to state 117



state 52

    jump_statement  ->  BREAK . ';'   (rule 134)

    ';' 	shift, and go to state 118



state 53

    jump_statement  ->  RETURN . ';'   (rule 135)
    jump_statement  ->  RETURN . expression ';'   (rule 136)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 119

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 120



state 54

    primary_expression  ->  '(' . expression ')'   (rule 3)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 121



state 55

    unary_operator  ->  '+' .   (rule 11)

    $default	reduce using rule 11 (unary_operator)



state 56

    unary_operator  ->  '-' .   (rule 12)

    $default	reduce using rule 12 (unary_operator)



state 57

    unary_operator  ->  '!' .   (rule 13)

    $default	reduce using rule 13 (unary_operator)



state 58

    expression_statement  ->  ';' .   (rule 123)

    $default	reduce using rule 123 (expression_statement)



state 59

    compound_statement  ->  '{' '}' .   (rule 115)

    $default	reduce using rule 115 (compound_statement)



state 60

    postfix_expression  ->  primary_expression .   (rule 4)

    $default	reduce using rule 4 (postfix_expression)



state 61

    postfix_expression  ->  postfix_expression . INC_OP   (rule 5)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 6)
    unary_expression  ->  postfix_expression .   (rule 7)

    INC_OP	shift, and go to state 122
    DEC_OP	shift, and go to state 123

    $default	reduce using rule 7 (unary_expression)



state 62

    multiplicative_expression  ->  unary_expression .   (rule 14)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 41)

    MUL_ASSIGN	shift, and go to state 124
    DIV_ASSIGN	shift, and go to state 125
    MOD_ASSIGN	shift, and go to state 126
    ADD_ASSIGN	shift, and go to state 127
    SUB_ASSIGN	shift, and go to state 128
    LEFT_ASSIGN	shift, and go to state 129
    RIGHT_ASSIGN	shift, and go to state 130
    AND_ASSIGN	shift, and go to state 131
    XOR_ASSIGN	shift, and go to state 132
    OR_ASSIGN	shift, and go to state 133
    '=' 	shift, and go to state 134

    $default	reduce using rule 14 (multiplicative_expression)

    assignment_operator	go to state 135



state 63

    unary_expression  ->  unary_operator . unary_expression   (rule 10)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 136
    unary_operator	go to state 63



state 64

    multiplicative_expression  ->  multiplicative_expression . '*' unary_expression   (rule 15)
    multiplicative_expression  ->  multiplicative_expression . '/' unary_expression   (rule 16)
    multiplicative_expression  ->  multiplicative_expression . '%' unary_expression   (rule 17)
    additive_expression  ->  multiplicative_expression .   (rule 18)

    '*' 	shift, and go to state 137
    '/' 	shift, and go to state 138
    '%' 	shift, and go to state 139

    $default	reduce using rule 18 (additive_expression)



state 65

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 19)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 20)
    shift_expression  ->  additive_expression .   (rule 21)

    '+' 	shift, and go to state 140
    '-' 	shift, and go to state 141

    $default	reduce using rule 21 (shift_expression)



state 66

    relational_expression  ->  shift_expression .   (rule 22)

    $default	reduce using rule 22 (relational_expression)



state 67

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 23)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 24)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 25)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 26)
    equality_expression  ->  relational_expression .   (rule 27)

    LE_OP	shift, and go to state 142
    GE_OP	shift, and go to state 143
    '<' 	shift, and go to state 144
    '>' 	shift, and go to state 145

    $default	reduce using rule 27 (equality_expression)



state 68

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 28)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 29)
    and_expression  ->  equality_expression .   (rule 30)

    EQ_OP	shift, and go to state 146
    NE_OP	shift, and go to state 147

    $default	reduce using rule 30 (and_expression)



state 69

    and_expression  ->  and_expression . '&' equality_expression   (rule 31)
    exclusive_or_expression  ->  and_expression .   (rule 32)

    '&' 	shift, and go to state 148

    $default	reduce using rule 32 (exclusive_or_expression)



state 70

    inclusive_or_expression  ->  exclusive_or_expression .   (rule 33)

    $default	reduce using rule 33 (inclusive_or_expression)



state 71

    logical_and_expression  ->  inclusive_or_expression .   (rule 34)

    $default	reduce using rule 34 (logical_and_expression)



state 72

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 35)
    logical_or_expression  ->  logical_and_expression .   (rule 36)

    AND_OP	shift, and go to state 149

    $default	reduce using rule 36 (logical_or_expression)



state 73

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 37)
    conditional_expression  ->  logical_or_expression .   (rule 38)
    conditional_expression  ->  logical_or_expression . '?' expression ':' conditional_expression   (rule 39)

    OR_OP	shift, and go to state 150
    '?' 	shift, and go to state 151

    $default	reduce using rule 38 (conditional_expression)



state 74

    assignment_expression  ->  conditional_expression .   (rule 40)

    $default	reduce using rule 40 (assignment_expression)



state 75

    expression  ->  assignment_expression .   (rule 53)

    $default	reduce using rule 53 (expression)



state 76

    expression  ->  expression . ',' assignment_expression   (rule 54)
    expression_statement  ->  expression . ';'   (rule 124)

    ',' 	shift, and go to state 152
    ';' 	shift, and go to state 153



state 77

    statement_list  ->  statement .   (rule 121)

    $default	reduce using rule 121 (statement_list)



state 78

    statement  ->  labeled_statement .   (rule 106)

    $default	reduce using rule 106 (statement)



state 79

    statement  ->  compound_statement .   (rule 107)

    $default	reduce using rule 107 (statement)



state 80

    compound_statement  ->  '{' declaration_list . '}'   (rule 117)
    compound_statement  ->  '{' declaration_list . statement_list '}'   (rule 118)
    declaration_list  ->  declaration_list . declaration   (rule 120)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25
    '}' 	shift, and go to state 154

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    declaration	go to state 87
    declaration_specifiers	go to state 27
    type_specifier	go to state 14
    statement	go to state 77
    labeled_statement	go to state 78
    compound_statement	go to state 79
    statement_list	go to state 155
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 81

    compound_statement  ->  '{' statement_list . '}'   (rule 116)
    statement_list  ->  statement_list . statement   (rule 122)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25
    '}' 	shift, and go to state 156

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    statement	go to state 157
    labeled_statement	go to state 78
    compound_statement	go to state 79
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 82

    statement  ->  expression_statement .   (rule 108)

    $default	reduce using rule 108 (statement)



state 83

    statement  ->  selection_statement .   (rule 109)

    $default	reduce using rule 109 (statement)



state 84

    statement  ->  iteration_statement .   (rule 110)

    $default	reduce using rule 110 (statement)



state 85

    statement  ->  jump_statement .   (rule 111)

    $default	reduce using rule 111 (statement)



state 86

    init_declarator  ->  declarator .   (rule 61)
    init_declarator  ->  declarator . '=' initializer   (rule 62)

    '=' 	shift, and go to state 36

    $default	reduce using rule 61 (init_declarator)



state 87

    declaration_list  ->  declaration_list declaration .   (rule 120)

    $default	reduce using rule 120 (declaration_list)



state 88

    function_definition  ->  declarator declaration_list compound_statement .   (rule 143)

    $default	reduce using rule 143 (function_definition)



state 89

    identifier_list  ->  IDENTIFIER .   (rule 99)

    $default	reduce using rule 99 (identifier_list)



state 90

    direct_declarator  ->  direct_declarator '(' ')' .   (rule 92)

    $default	reduce using rule 92 (direct_declarator)



state 91

    parameter_declaration  ->  declaration_specifiers . declarator   (rule 97)
    parameter_declaration  ->  declaration_specifiers .   (rule 98)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 11

    $default	reduce using rule 98 (parameter_declaration)

    declarator	go to state 158
    direct_declarator	go to state 16



state 92

    direct_declarator  ->  direct_declarator '(' parameter_type_list . ')'   (rule 90)

    ')' 	shift, and go to state 159



state 93

    parameter_type_list  ->  parameter_list .   (rule 93)
    parameter_type_list  ->  parameter_list . ',' ELLIPSIS   (rule 94)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 96)

    ',' 	shift, and go to state 160

    $default	reduce using rule 93 (parameter_type_list)



state 94

    parameter_list  ->  parameter_declaration .   (rule 95)

    $default	reduce using rule 95 (parameter_list)



state 95

    direct_declarator  ->  direct_declarator '(' identifier_list . ')'   (rule 91)
    identifier_list  ->  identifier_list . ',' IDENTIFIER   (rule 100)

    ')' 	shift, and go to state 161
    ',' 	shift, and go to state 162



state 96

    primary_expression  ->  IDENTIFIER .   (rule 1)

    $default	reduce using rule 1 (primary_expression)



state 97

    direct_declarator  ->  direct_declarator '[' ']' .   (rule 89)

    $default	reduce using rule 89 (direct_declarator)



state 98

    multiplicative_expression  ->  unary_expression .   (rule 14)

    $default	reduce using rule 14 (multiplicative_expression)



state 99

    constant_expression  ->  conditional_expression .   (rule 55)

    $default	reduce using rule 55 (constant_expression)



state 100

    direct_declarator  ->  direct_declarator '[' constant_expression . ']'   (rule 88)

    ']' 	shift, and go to state 163



state 101

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 60)

    $default	reduce using rule 60 (init_declarator_list)



state 102

    initializer  ->  '{' . initializer_list '}'   (rule 102)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 103)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    '{' 	shift, and go to state 102

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 103
    initializer	go to state 164
    initializer_list	go to state 165



state 103

    initializer  ->  assignment_expression .   (rule 101)

    $default	reduce using rule 101 (initializer)



state 104

    init_declarator  ->  declarator '=' initializer .   (rule 62)

    $default	reduce using rule 62 (init_declarator)



state 105

    function_definition  ->  declaration_specifiers declarator declaration_list compound_statement .   (rule 141)

    $default	reduce using rule 141 (function_definition)



state 106

    labeled_statement  ->  IDENTIFIER ':' . statement   (rule 112)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    statement	go to state 166
    labeled_statement	go to state 78
    compound_statement	go to state 79
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 107

    unary_expression  ->  INC_OP unary_expression .   (rule 8)

    $default	reduce using rule 8 (unary_expression)



state 108

    unary_expression  ->  DEC_OP unary_expression .   (rule 9)

    $default	reduce using rule 9 (unary_expression)



state 109

    labeled_statement  ->  CASE constant_expression . ':' statement   (rule 113)

    ':' 	shift, and go to state 167



state 110

    labeled_statement  ->  DEFAULT ':' . statement   (rule 114)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    statement	go to state 168
    labeled_statement	go to state 78
    compound_statement	go to state 79
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 111

    selection_statement  ->  IF '(' . expression ')' statement   (rule 125)
    selection_statement  ->  IF '(' . expression ')' statement ELSE statement   (rule 126)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 169



state 112

    selection_statement  ->  SWITCH '(' . expression ')' statement   (rule 127)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 170



state 113

    iteration_statement  ->  WHILE '(' . expression ')' statement   (rule 128)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 171



state 114

    iteration_statement  ->  DO statement . WHILE '(' expression ')' ';'   (rule 129)

    WHILE	shift, and go to state 172



state 115

    iteration_statement  ->  FOR '(' . expression_statement expression_statement ')' statement   (rule 130)
    iteration_statement  ->  FOR '(' . expression_statement expression_statement expression ')' statement   (rule 131)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    expression_statement	go to state 173



state 116

    jump_statement  ->  GOTO IDENTIFIER . ';'   (rule 132)

    ';' 	shift, and go to state 174



state 117

    jump_statement  ->  CONTINUE ';' .   (rule 133)

    $default	reduce using rule 133 (jump_statement)



state 118

    jump_statement  ->  BREAK ';' .   (rule 134)

    $default	reduce using rule 134 (jump_statement)



state 119

    jump_statement  ->  RETURN ';' .   (rule 135)

    $default	reduce using rule 135 (jump_statement)



state 120

    expression  ->  expression . ',' assignment_expression   (rule 54)
    jump_statement  ->  RETURN expression . ';'   (rule 136)

    ',' 	shift, and go to state 152
    ';' 	shift, and go to state 175



state 121

    primary_expression  ->  '(' expression . ')'   (rule 3)
    expression  ->  expression . ',' assignment_expression   (rule 54)

    ')' 	shift, and go to state 176
    ',' 	shift, and go to state 152



state 122

    postfix_expression  ->  postfix_expression INC_OP .   (rule 5)

    $default	reduce using rule 5 (postfix_expression)



state 123

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 6)

    $default	reduce using rule 6 (postfix_expression)



state 124

    assignment_operator  ->  MUL_ASSIGN .   (rule 43)

    $default	reduce using rule 43 (assignment_operator)



state 125

    assignment_operator  ->  DIV_ASSIGN .   (rule 44)

    $default	reduce using rule 44 (assignment_operator)



state 126

    assignment_operator  ->  MOD_ASSIGN .   (rule 45)

    $default	reduce using rule 45 (assignment_operator)



state 127

    assignment_operator  ->  ADD_ASSIGN .   (rule 46)

    $default	reduce using rule 46 (assignment_operator)



state 128

    assignment_operator  ->  SUB_ASSIGN .   (rule 47)

    $default	reduce using rule 47 (assignment_operator)



state 129

    assignment_operator  ->  LEFT_ASSIGN .   (rule 48)

    $default	reduce using rule 48 (assignment_operator)



state 130

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 49)

    $default	reduce using rule 49 (assignment_operator)



state 131

    assignment_operator  ->  AND_ASSIGN .   (rule 50)

    $default	reduce using rule 50 (assignment_operator)



state 132

    assignment_operator  ->  XOR_ASSIGN .   (rule 51)

    $default	reduce using rule 51 (assignment_operator)



state 133

    assignment_operator  ->  OR_ASSIGN .   (rule 52)

    $default	reduce using rule 52 (assignment_operator)



state 134

    assignment_operator  ->  '=' .   (rule 42)

    $default	reduce using rule 42 (assignment_operator)



state 135

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 41)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 177



state 136

    unary_expression  ->  unary_operator unary_expression .   (rule 10)

    $default	reduce using rule 10 (unary_expression)



state 137

    multiplicative_expression  ->  multiplicative_expression '*' . unary_expression   (rule 15)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 178
    unary_operator	go to state 63



state 138

    multiplicative_expression  ->  multiplicative_expression '/' . unary_expression   (rule 16)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 179
    unary_operator	go to state 63



state 139

    multiplicative_expression  ->  multiplicative_expression '%' . unary_expression   (rule 17)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 180
    unary_operator	go to state 63



state 140

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 19)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 181



state 141

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 20)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 182



state 142

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 25)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 183



state 143

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 26)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 184



state 144

    relational_expression  ->  relational_expression '<' . shift_expression   (rule 23)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 185



state 145

    relational_expression  ->  relational_expression '>' . shift_expression   (rule 24)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 186



state 146

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 28)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 187



state 147

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 29)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 188



state 148

    and_expression  ->  and_expression '&' . equality_expression   (rule 31)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 189



state 149

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 35)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 190



state 150

    logical_or_expression  ->  logical_or_expression OR_OP . logical_and_expression   (rule 37)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 191



state 151

    conditional_expression  ->  logical_or_expression '?' . expression ':' conditional_expression   (rule 39)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 192



state 152

    expression  ->  expression ',' . assignment_expression   (rule 54)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 193



state 153

    expression_statement  ->  expression ';' .   (rule 124)

    $default	reduce using rule 124 (expression_statement)



state 154

    compound_statement  ->  '{' declaration_list '}' .   (rule 117)

    $default	reduce using rule 117 (compound_statement)



state 155

    compound_statement  ->  '{' declaration_list statement_list . '}'   (rule 118)
    statement_list  ->  statement_list . statement   (rule 122)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25
    '}' 	shift, and go to state 194

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    statement	go to state 157
    labeled_statement	go to state 78
    compound_statement	go to state 79
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 156

    compound_statement  ->  '{' statement_list '}' .   (rule 116)

    $default	reduce using rule 116 (compound_statement)



state 157

    statement_list  ->  statement_list statement .   (rule 122)

    $default	reduce using rule 122 (statement_list)



state 158

    parameter_declaration  ->  declaration_specifiers declarator .   (rule 97)

    $default	reduce using rule 97 (parameter_declaration)



state 159

    direct_declarator  ->  direct_declarator '(' parameter_type_list ')' .   (rule 90)

    $default	reduce using rule 90 (direct_declarator)



state 160

    parameter_type_list  ->  parameter_list ',' . ELLIPSIS   (rule 94)
    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 96)

    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    ELLIPSIS	shift, and go to state 195

    declaration_specifiers	go to state 91
    type_specifier	go to state 14
    parameter_declaration	go to state 196



state 161

    direct_declarator  ->  direct_declarator '(' identifier_list ')' .   (rule 91)

    $default	reduce using rule 91 (direct_declarator)



state 162

    identifier_list  ->  identifier_list ',' . IDENTIFIER   (rule 100)

    IDENTIFIER	shift, and go to state 197



state 163

    direct_declarator  ->  direct_declarator '[' constant_expression ']' .   (rule 88)

    $default	reduce using rule 88 (direct_declarator)



state 164

    initializer_list  ->  initializer .   (rule 104)

    $default	reduce using rule 104 (initializer_list)



state 165

    initializer  ->  '{' initializer_list . '}'   (rule 102)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 103)
    initializer_list  ->  initializer_list . ',' initializer   (rule 105)

    ',' 	shift, and go to state 198
    '}' 	shift, and go to state 199



state 166

    labeled_statement  ->  IDENTIFIER ':' statement .   (rule 112)

    $default	reduce using rule 112 (labeled_statement)



state 167

    labeled_statement  ->  CASE constant_expression ':' . statement   (rule 113)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    statement	go to state 200
    labeled_statement	go to state 78
    compound_statement	go to state 79
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 168

    labeled_statement  ->  DEFAULT ':' statement .   (rule 114)

    $default	reduce using rule 114 (labeled_statement)



state 169

    expression  ->  expression . ',' assignment_expression   (rule 54)
    selection_statement  ->  IF '(' expression . ')' statement   (rule 125)
    selection_statement  ->  IF '(' expression . ')' statement ELSE statement   (rule 126)

    ')' 	shift, and go to state 201
    ',' 	shift, and go to state 152



state 170

    expression  ->  expression . ',' assignment_expression   (rule 54)
    selection_statement  ->  SWITCH '(' expression . ')' statement   (rule 127)

    ')' 	shift, and go to state 202
    ',' 	shift, and go to state 152



state 171

    expression  ->  expression . ',' assignment_expression   (rule 54)
    iteration_statement  ->  WHILE '(' expression . ')' statement   (rule 128)

    ')' 	shift, and go to state 203
    ',' 	shift, and go to state 152



state 172

    iteration_statement  ->  DO statement WHILE . '(' expression ')' ';'   (rule 129)

    '(' 	shift, and go to state 204



state 173

    iteration_statement  ->  FOR '(' expression_statement . expression_statement ')' statement   (rule 130)
    iteration_statement  ->  FOR '(' expression_statement . expression_statement expression ')' statement   (rule 131)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    expression_statement	go to state 205



state 174

    jump_statement  ->  GOTO IDENTIFIER ';' .   (rule 132)

    $default	reduce using rule 132 (jump_statement)



state 175

    jump_statement  ->  RETURN expression ';' .   (rule 136)

    $default	reduce using rule 136 (jump_statement)



state 176

    primary_expression  ->  '(' expression ')' .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 177

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 41)

    $default	reduce using rule 41 (assignment_expression)



state 178

    multiplicative_expression  ->  multiplicative_expression '*' unary_expression .   (rule 15)

    $default	reduce using rule 15 (multiplicative_expression)



state 179

    multiplicative_expression  ->  multiplicative_expression '/' unary_expression .   (rule 16)

    $default	reduce using rule 16 (multiplicative_expression)



state 180

    multiplicative_expression  ->  multiplicative_expression '%' unary_expression .   (rule 17)

    $default	reduce using rule 17 (multiplicative_expression)



state 181

    multiplicative_expression  ->  multiplicative_expression . '*' unary_expression   (rule 15)
    multiplicative_expression  ->  multiplicative_expression . '/' unary_expression   (rule 16)
    multiplicative_expression  ->  multiplicative_expression . '%' unary_expression   (rule 17)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 19)

    '*' 	shift, and go to state 137
    '/' 	shift, and go to state 138
    '%' 	shift, and go to state 139

    $default	reduce using rule 19 (additive_expression)



state 182

    multiplicative_expression  ->  multiplicative_expression . '*' unary_expression   (rule 15)
    multiplicative_expression  ->  multiplicative_expression . '/' unary_expression   (rule 16)
    multiplicative_expression  ->  multiplicative_expression . '%' unary_expression   (rule 17)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 20)

    '*' 	shift, and go to state 137
    '/' 	shift, and go to state 138
    '%' 	shift, and go to state 139

    $default	reduce using rule 20 (additive_expression)



state 183

    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 25)

    $default	reduce using rule 25 (relational_expression)



state 184

    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 26)

    $default	reduce using rule 26 (relational_expression)



state 185

    relational_expression  ->  relational_expression '<' shift_expression .   (rule 23)

    $default	reduce using rule 23 (relational_expression)



state 186

    relational_expression  ->  relational_expression '>' shift_expression .   (rule 24)

    $default	reduce using rule 24 (relational_expression)



state 187

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 23)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 24)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 25)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 26)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 28)

    LE_OP	shift, and go to state 142
    GE_OP	shift, and go to state 143
    '<' 	shift, and go to state 144
    '>' 	shift, and go to state 145

    $default	reduce using rule 28 (equality_expression)



state 188

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 23)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 24)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 25)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 26)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 29)

    LE_OP	shift, and go to state 142
    GE_OP	shift, and go to state 143
    '<' 	shift, and go to state 144
    '>' 	shift, and go to state 145

    $default	reduce using rule 29 (equality_expression)



state 189

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 28)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 29)
    and_expression  ->  and_expression '&' equality_expression .   (rule 31)

    EQ_OP	shift, and go to state 146
    NE_OP	shift, and go to state 147

    $default	reduce using rule 31 (and_expression)



state 190

    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 35)

    $default	reduce using rule 35 (logical_and_expression)



state 191

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 35)
    logical_or_expression  ->  logical_or_expression OR_OP logical_and_expression .   (rule 37)

    AND_OP	shift, and go to state 149

    $default	reduce using rule 37 (logical_or_expression)



state 192

    conditional_expression  ->  logical_or_expression '?' expression . ':' conditional_expression   (rule 39)
    expression  ->  expression . ',' assignment_expression   (rule 54)

    ':' 	shift, and go to state 206
    ',' 	shift, and go to state 152



state 193

    expression  ->  expression ',' assignment_expression .   (rule 54)

    $default	reduce using rule 54 (expression)



state 194

    compound_statement  ->  '{' declaration_list statement_list '}' .   (rule 118)

    $default	reduce using rule 118 (compound_statement)



state 195

    parameter_type_list  ->  parameter_list ',' ELLIPSIS .   (rule 94)

    $default	reduce using rule 94 (parameter_type_list)



state 196

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 96)

    $default	reduce using rule 96 (parameter_list)



state 197

    identifier_list  ->  identifier_list ',' IDENTIFIER .   (rule 100)

    $default	reduce using rule 100 (identifier_list)



state 198

    initializer  ->  '{' initializer_list ',' . '}'   (rule 103)
    initializer_list  ->  initializer_list ',' . initializer   (rule 105)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    '{' 	shift, and go to state 102
    '}' 	shift, and go to state 207

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 103
    initializer	go to state 208



state 199

    initializer  ->  '{' initializer_list '}' .   (rule 102)

    $default	reduce using rule 102 (initializer)



state 200

    labeled_statement  ->  CASE constant_expression ':' statement .   (rule 113)

    $default	reduce using rule 113 (labeled_statement)



state 201

    selection_statement  ->  IF '(' expression ')' . statement   (rule 125)
    selection_statement  ->  IF '(' expression ')' . statement ELSE statement   (rule 126)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    statement	go to state 209
    labeled_statement	go to state 78
    compound_statement	go to state 79
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 202

    selection_statement  ->  SWITCH '(' expression ')' . statement   (rule 127)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    statement	go to state 210
    labeled_statement	go to state 78
    compound_statement	go to state 79
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 203

    iteration_statement  ->  WHILE '(' expression ')' . statement   (rule 128)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    statement	go to state 211
    labeled_statement	go to state 78
    compound_statement	go to state 79
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 204

    iteration_statement  ->  DO statement WHILE '(' . expression ')' ';'   (rule 129)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 212



state 205

    iteration_statement  ->  FOR '(' expression_statement expression_statement . ')' statement   (rule 130)
    iteration_statement  ->  FOR '(' expression_statement expression_statement . expression ')' statement   (rule 131)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    ')' 	shift, and go to state 213
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 214



state 206

    conditional_expression  ->  logical_or_expression '?' expression ':' . conditional_expression   (rule 39)

    IDENTIFIER	shift, and go to state 96
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 98
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 215



state 207

    initializer  ->  '{' initializer_list ',' '}' .   (rule 103)

    $default	reduce using rule 103 (initializer)



state 208

    initializer_list  ->  initializer_list ',' initializer .   (rule 105)

    $default	reduce using rule 105 (initializer_list)



state 209

    selection_statement  ->  IF '(' expression ')' statement .   (rule 125)
    selection_statement  ->  IF '(' expression ')' statement . ELSE statement   (rule 126)

    ELSE	shift, and go to state 216

    ELSE	[reduce using rule 125 (selection_statement)]
    $default	reduce using rule 125 (selection_statement)



state 210

    selection_statement  ->  SWITCH '(' expression ')' statement .   (rule 127)

    $default	reduce using rule 127 (selection_statement)



state 211

    iteration_statement  ->  WHILE '(' expression ')' statement .   (rule 128)

    $default	reduce using rule 128 (iteration_statement)



state 212

    expression  ->  expression . ',' assignment_expression   (rule 54)
    iteration_statement  ->  DO statement WHILE '(' expression . ')' ';'   (rule 129)

    ')' 	shift, and go to state 217
    ',' 	shift, and go to state 152



state 213

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' . statement   (rule 130)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    statement	go to state 218
    labeled_statement	go to state 78
    compound_statement	go to state 79
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 214

    expression  ->  expression . ',' assignment_expression   (rule 54)
    iteration_statement  ->  FOR '(' expression_statement expression_statement expression . ')' statement   (rule 131)

    ')' 	shift, and go to state 219
    ',' 	shift, and go to state 152



state 215

    conditional_expression  ->  logical_or_expression '?' expression ':' conditional_expression .   (rule 39)

    $default	reduce using rule 39 (conditional_expression)



state 216

    selection_statement  ->  IF '(' expression ')' statement ELSE . statement   (rule 126)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    statement	go to state 220
    labeled_statement	go to state 78
    compound_statement	go to state 79
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 217

    iteration_statement  ->  DO statement WHILE '(' expression ')' . ';'   (rule 129)

    ';' 	shift, and go to state 221



state 218

    iteration_statement  ->  FOR '(' expression_statement expression_statement ')' statement .   (rule 130)

    $default	reduce using rule 130 (iteration_statement)



state 219

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' . statement   (rule 131)

    IDENTIFIER	shift, and go to state 39
    CONSTANT	shift, and go to state 40
    INC_OP	shift, and go to state 41
    DEC_OP	shift, and go to state 42
    CASE	shift, and go to state 43
    DEFAULT	shift, and go to state 44
    IF  	shift, and go to state 45
    SWITCH	shift, and go to state 46
    WHILE	shift, and go to state 47
    DO  	shift, and go to state 48
    FOR 	shift, and go to state 49
    GOTO	shift, and go to state 50
    CONTINUE	shift, and go to state 51
    BREAK	shift, and go to state 52
    RETURN	shift, and go to state 53
    '(' 	shift, and go to state 54
    '+' 	shift, and go to state 55
    '-' 	shift, and go to state 56
    '!' 	shift, and go to state 57
    ';' 	shift, and go to state 58
    '{' 	shift, and go to state 25

    primary_expression	go to state 60
    postfix_expression	go to state 61
    unary_expression	go to state 62
    unary_operator	go to state 63
    multiplicative_expression	go to state 64
    additive_expression	go to state 65
    shift_expression	go to state 66
    relational_expression	go to state 67
    equality_expression	go to state 68
    and_expression	go to state 69
    exclusive_or_expression	go to state 70
    inclusive_or_expression	go to state 71
    logical_and_expression	go to state 72
    logical_or_expression	go to state 73
    conditional_expression	go to state 74
    assignment_expression	go to state 75
    expression	go to state 76
    statement	go to state 222
    labeled_statement	go to state 78
    compound_statement	go to state 79
    expression_statement	go to state 82
    selection_statement	go to state 83
    iteration_statement	go to state 84
    jump_statement	go to state 85



state 220

    selection_statement  ->  IF '(' expression ')' statement ELSE statement .   (rule 126)

    $default	reduce using rule 126 (selection_statement)



state 221

    iteration_statement  ->  DO statement WHILE '(' expression ')' ';' .   (rule 129)

    $default	reduce using rule 129 (iteration_statement)



state 222

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' statement .   (rule 131)

    $default	reduce using rule 131 (iteration_statement)



state 223

    $   	go to state 224



state 224

    $default	accept
