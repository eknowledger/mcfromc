

Terminals which are not used:

   STRING_LITERAL
   SIZEOF
   PTR_OP
   LEFT_OP
   RIGHT_OP
   MOD_ASSIGN
   LEFT_ASSIGN
   RIGHT_ASSIGN
   AND_ASSIGN
   XOR_ASSIGN
   OR_ASSIGN
   TYPE_NAME
   TYPEDEF
   EXTERN
   STATIC
   AUTO
   REGISTER
   CONST
   VOLATILE
   STRUCT
   UNION
   ENUM
   ELLIPSIS
   CASE
   DEFAULT
   SWITCH
   GOTO
   CONTINUE
   BREAK
   RETURN


State 166 contains 1 shift/reduce conflict.

Grammar
rule 1    primary_expression -> IDENTIFIER
rule 2    primary_expression -> CONSTANT
rule 3    primary_expression -> '(' expression ')'
rule 4    postfix_expression -> primary_expression
rule 5    postfix_expression -> postfix_expression INC_OP
rule 6    postfix_expression -> postfix_expression DEC_OP
rule 7    unary_expression -> postfix_expression
rule 8    unary_expression -> INC_OP unary_expression
rule 9    unary_expression -> DEC_OP unary_expression
rule 10   unary_expression -> unary_operator unary_expression
rule 11   unary_operator -> '+'
rule 12   unary_operator -> '-'
rule 13   unary_operator -> '!'
rule 14   multiplicative_expression -> unary_expression
rule 15   multiplicative_expression -> multiplicative_expression '*' unary_expression
rule 16   multiplicative_expression -> multiplicative_expression '/' unary_expression
rule 17   additive_expression -> multiplicative_expression
rule 18   additive_expression -> additive_expression '+' multiplicative_expression
rule 19   additive_expression -> additive_expression '-' multiplicative_expression
rule 20   shift_expression -> additive_expression
rule 21   relational_expression -> shift_expression
rule 22   relational_expression -> relational_expression '<' shift_expression
rule 23   relational_expression -> relational_expression '>' shift_expression
rule 24   relational_expression -> relational_expression LE_OP shift_expression
rule 25   relational_expression -> relational_expression GE_OP shift_expression
rule 26   equality_expression -> relational_expression
rule 27   equality_expression -> equality_expression EQ_OP relational_expression
rule 28   equality_expression -> equality_expression NE_OP relational_expression
rule 29   and_expression -> equality_expression
rule 30   and_expression -> and_expression '&' equality_expression
rule 31   exclusive_or_expression -> and_expression
rule 32   inclusive_or_expression -> exclusive_or_expression
rule 33   logical_and_expression -> inclusive_or_expression
rule 34   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 35   logical_or_expression -> logical_and_expression
rule 36   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
rule 37   conditional_expression -> logical_or_expression
rule 38   conditional_expression -> logical_or_expression '?' expression ':' conditional_expression
rule 39   assignment_expression -> conditional_expression
rule 40   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 41   assignment_operator -> '='
rule 42   assignment_operator -> MUL_ASSIGN
rule 43   assignment_operator -> DIV_ASSIGN
rule 44   assignment_operator -> ADD_ASSIGN
rule 45   assignment_operator -> SUB_ASSIGN
rule 46   expression -> assignment_expression
rule 47   expression -> expression ',' assignment_expression
rule 48   declaration -> declaration_specifiers ';'
rule 49   declaration -> declaration_specifiers init_declarator_list ';'
rule 50   declaration_specifiers -> type_specifier
rule 51   init_declarator_list -> init_declarator
rule 52   init_declarator_list -> init_declarator_list ',' init_declarator
rule 53   init_declarator -> declarator
rule 54   init_declarator -> declarator '=' initializer
rule 55   type_specifier -> VOID
rule 56   type_specifier -> CHAR
rule 57   type_specifier -> SHORT
rule 58   type_specifier -> INT
rule 59   type_specifier -> LONG
rule 60   type_specifier -> FLOAT
rule 61   type_specifier -> DOUBLE
rule 62   type_specifier -> SIGNED
rule 63   type_specifier -> UNSIGNED
rule 64   declarator -> direct_declarator
rule 65   direct_declarator -> IDENTIFIER
rule 66   direct_declarator -> '(' declarator ')'
rule 67   direct_declarator -> direct_declarator '(' parameter_type_list ')'
rule 68   direct_declarator -> direct_declarator '(' identifier_list ')'
rule 69   direct_declarator -> direct_declarator '(' ')'
rule 70   parameter_type_list -> parameter_list
rule 71   parameter_list -> parameter_declaration
rule 72   parameter_list -> parameter_list ',' parameter_declaration
rule 73   parameter_declaration -> declaration_specifiers declarator
rule 74   parameter_declaration -> declaration_specifiers
rule 75   identifier_list -> IDENTIFIER
rule 76   identifier_list -> identifier_list ',' IDENTIFIER
rule 77   initializer -> assignment_expression
rule 78   initializer -> '{' initializer_list '}'
rule 79   initializer -> '{' initializer_list ',' '}'
rule 80   initializer_list -> initializer
rule 81   initializer_list -> initializer_list ',' initializer
rule 82   statement -> compound_statement
rule 83   statement -> expression_statement
rule 84   statement -> selection_statement
rule 85   statement -> iteration_statement
rule 86   compound_statement -> '{' '}'
rule 87   compound_statement -> '{' statement_list '}'
rule 88   compound_statement -> '{' declaration_list '}'
rule 89   compound_statement -> '{' declaration_list statement_list '}'
rule 90   declaration_list -> declaration
rule 91   declaration_list -> declaration_list declaration
rule 92   statement_list -> statement
rule 93   statement_list -> statement_list statement
rule 94   expression_statement -> ';'
rule 95   expression_statement -> expression ';'
rule 96   selection_statement -> IF '(' expression ')' statement
rule 97   selection_statement -> IF '(' expression ')' statement ELSE statement
rule 98   iteration_statement -> WHILE '(' expression ')' statement
rule 99   iteration_statement -> DO statement WHILE '(' expression ')' ';'
rule 100  iteration_statement -> FOR '(' expression_statement expression_statement expression ')' statement
rule 101  translation_unit -> external_declaration
rule 102  external_declaration -> function_definition
rule 103  external_declaration -> declaration
rule 104  function_definition -> declaration_specifiers declarator declaration_list compound_statement
rule 105  function_definition -> declaration_specifiers declarator compound_statement
rule 106  function_definition -> declarator declaration_list compound_statement
rule 107  function_definition -> declarator compound_statement

Terminals, with rules where they appear

$ (-1)
'!' (33) 13
'&' (38) 30
'(' (40) 3 66 67 68 69 96 97 98 99 100
')' (41) 3 66 67 68 69 96 97 98 99 100
'*' (42) 15
'+' (43) 11 18
',' (44) 47 52 72 76 79 81
'-' (45) 12 19
'/' (47) 16
':' (58) 38
';' (59) 48 49 94 95 99
'<' (60) 22
'=' (61) 41 54
'>' (62) 23
'?' (63) 38
'{' (123) 78 79 86 87 88 89
'}' (125) 78 79 86 87 88 89
error (256)
IDENTIFIER (258) 1 65 75 76
CONSTANT (259) 2
STRING_LITERAL (260)
SIZEOF (261)
PTR_OP (262)
INC_OP (263) 5 8
DEC_OP (264) 6 9
LEFT_OP (265)
RIGHT_OP (266)
LE_OP (267) 24
GE_OP (268) 25
EQ_OP (269) 27
NE_OP (270) 28
AND_OP (271) 34
OR_OP (272) 36
MUL_ASSIGN (273) 42
DIV_ASSIGN (274) 43
MOD_ASSIGN (275)
ADD_ASSIGN (276) 44
SUB_ASSIGN (277) 45
LEFT_ASSIGN (278)
RIGHT_ASSIGN (279)
AND_ASSIGN (280)
XOR_ASSIGN (281)
OR_ASSIGN (282)
TYPE_NAME (283)
TYPEDEF (284)
EXTERN (285)
STATIC (286)
AUTO (287)
REGISTER (288)
CHAR (289) 56
SHORT (290) 57
INT (291) 58
LONG (292) 59
SIGNED (293) 62
UNSIGNED (294) 63
FLOAT (295) 60
DOUBLE (296) 61
CONST (297)
VOLATILE (298)
VOID (299) 55
STRUCT (300)
UNION (301)
ENUM (302)
ELLIPSIS (303)
CASE (304)
DEFAULT (305)
IF (306) 96 97
ELSE (307) 97
SWITCH (308)
WHILE (309) 98 99
DO (310) 99
FOR (311) 100
GOTO (312)
CONTINUE (313)
BREAK (314)
RETURN (315)

Nonterminals, with rules where they appear

primary_expression (78)
    on left: 1 2 3, on right: 4
postfix_expression (79)
    on left: 4 5 6, on right: 5 6 7
unary_expression (80)
    on left: 7 8 9 10, on right: 8 9 10 14 15 16 40
unary_operator (81)
    on left: 11 12 13, on right: 10
multiplicative_expression (82)
    on left: 14 15 16, on right: 15 16 17 18 19
additive_expression (83)
    on left: 17 18 19, on right: 18 19 20
shift_expression (84)
    on left: 20, on right: 21 22 23 24 25
relational_expression (85)
    on left: 21 22 23 24 25, on right: 22 23 24 25 26 27 28
equality_expression (86)
    on left: 26 27 28, on right: 27 28 29 30
and_expression (87)
    on left: 29 30, on right: 30 31
exclusive_or_expression (88)
    on left: 31, on right: 32
inclusive_or_expression (89)
    on left: 32, on right: 33 34
logical_and_expression (90)
    on left: 33 34, on right: 34 35 36
logical_or_expression (91)
    on left: 35 36, on right: 36 37 38
conditional_expression (92)
    on left: 37 38, on right: 38 39
assignment_expression (93)
    on left: 39 40, on right: 40 46 47 77
assignment_operator (94)
    on left: 41 42 43 44 45, on right: 40
expression (95)
    on left: 46 47, on right: 3 38 47 95 96 97 98 99 100
declaration (96)
    on left: 48 49, on right: 90 91 103
declaration_specifiers (97)
    on left: 50, on right: 48 49 73 74 104 105
init_declarator_list (98)
    on left: 51 52, on right: 49 52
init_declarator (99)
    on left: 53 54, on right: 51 52
type_specifier (100)
    on left: 55 56 57 58 59 60 61 62 63, on right: 50
declarator (101)
    on left: 64, on right: 53 54 66 73 104 105 106 107
direct_declarator (102)
    on left: 65 66 67 68 69, on right: 64 67 68 69
parameter_type_list (103)
    on left: 70, on right: 67
parameter_list (104)
    on left: 71 72, on right: 70 72
parameter_declaration (105)
    on left: 73 74, on right: 71 72
identifier_list (106)
    on left: 75 76, on right: 68 76
initializer (107)
    on left: 77 78 79, on right: 54 80 81
initializer_list (108)
    on left: 80 81, on right: 78 79 81
statement (109)
    on left: 82 83 84 85, on right: 92 93 96 97 98 99 100
compound_statement (110)
    on left: 86 87 88 89, on right: 82 104 105 106 107
declaration_list (111)
    on left: 90 91, on right: 88 89 91 104 106
statement_list (112)
    on left: 92 93, on right: 87 89 93
expression_statement (113)
    on left: 94 95, on right: 83 100
selection_statement (114)
    on left: 96 97, on right: 84
iteration_statement (115)
    on left: 98 99 100, on right: 85
translation_unit (116)
    on left: 101
external_declaration (117)
    on left: 102 103, on right: 101
function_definition (118)
    on left: 104 105 106 107, on right: 102


state 0

    IDENTIFIER	shift, and go to state 1
    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    '(' 	shift, and go to state 11

    declaration	go to state 12
    declaration_specifiers	go to state 13
    type_specifier	go to state 14
    declarator	go to state 15
    direct_declarator	go to state 16
    translation_unit	go to state 177
    external_declaration	go to state 17
    function_definition	go to state 18



state 1

    direct_declarator  ->  IDENTIFIER .   (rule 65)

    $default	reduce using rule 65 (direct_declarator)



state 2

    type_specifier  ->  CHAR .   (rule 56)

    $default	reduce using rule 56 (type_specifier)



state 3

    type_specifier  ->  SHORT .   (rule 57)

    $default	reduce using rule 57 (type_specifier)



state 4

    type_specifier  ->  INT .   (rule 58)

    $default	reduce using rule 58 (type_specifier)



state 5

    type_specifier  ->  LONG .   (rule 59)

    $default	reduce using rule 59 (type_specifier)



state 6

    type_specifier  ->  SIGNED .   (rule 62)

    $default	reduce using rule 62 (type_specifier)



state 7

    type_specifier  ->  UNSIGNED .   (rule 63)

    $default	reduce using rule 63 (type_specifier)



state 8

    type_specifier  ->  FLOAT .   (rule 60)

    $default	reduce using rule 60 (type_specifier)



state 9

    type_specifier  ->  DOUBLE .   (rule 61)

    $default	reduce using rule 61 (type_specifier)



state 10

    type_specifier  ->  VOID .   (rule 55)

    $default	reduce using rule 55 (type_specifier)



state 11

    direct_declarator  ->  '(' . declarator ')'   (rule 66)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 11

    declarator	go to state 19
    direct_declarator	go to state 16



state 12

    external_declaration  ->  declaration .   (rule 103)

    $default	reduce using rule 103 (external_declaration)



state 13

    declaration  ->  declaration_specifiers . ';'   (rule 48)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 49)
    function_definition  ->  declaration_specifiers . declarator declaration_list compound_statement   (rule 104)
    function_definition  ->  declaration_specifiers . declarator compound_statement   (rule 105)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 11
    ';' 	shift, and go to state 20

    init_declarator_list	go to state 21
    init_declarator	go to state 22
    declarator	go to state 23
    direct_declarator	go to state 16



state 14

    declaration_specifiers  ->  type_specifier .   (rule 50)

    $default	reduce using rule 50 (declaration_specifiers)



state 15

    function_definition  ->  declarator . declaration_list compound_statement   (rule 106)
    function_definition  ->  declarator . compound_statement   (rule 107)

    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    '{' 	shift, and go to state 24

    declaration	go to state 25
    declaration_specifiers	go to state 26
    type_specifier	go to state 14
    compound_statement	go to state 27
    declaration_list	go to state 28



state 16

    declarator  ->  direct_declarator .   (rule 64)
    direct_declarator  ->  direct_declarator . '(' parameter_type_list ')'   (rule 67)
    direct_declarator  ->  direct_declarator . '(' identifier_list ')'   (rule 68)
    direct_declarator  ->  direct_declarator . '(' ')'   (rule 69)

    '(' 	shift, and go to state 29

    $default	reduce using rule 64 (declarator)



state 17

    translation_unit  ->  external_declaration .   (rule 101)

    $default	reduce using rule 101 (translation_unit)



state 18

    external_declaration  ->  function_definition .   (rule 102)

    $default	reduce using rule 102 (external_declaration)



state 19

    direct_declarator  ->  '(' declarator . ')'   (rule 66)

    ')' 	shift, and go to state 30



state 20

    declaration  ->  declaration_specifiers ';' .   (rule 48)

    $default	reduce using rule 48 (declaration)



state 21

    declaration  ->  declaration_specifiers init_declarator_list . ';'   (rule 49)
    init_declarator_list  ->  init_declarator_list . ',' init_declarator   (rule 52)

    ',' 	shift, and go to state 31
    ';' 	shift, and go to state 32



state 22

    init_declarator_list  ->  init_declarator .   (rule 51)

    $default	reduce using rule 51 (init_declarator_list)



state 23

    init_declarator  ->  declarator .   (rule 53)
    init_declarator  ->  declarator . '=' initializer   (rule 54)
    function_definition  ->  declaration_specifiers declarator . declaration_list compound_statement   (rule 104)
    function_definition  ->  declaration_specifiers declarator . compound_statement   (rule 105)

    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    '=' 	shift, and go to state 33
    '{' 	shift, and go to state 24

    $default	reduce using rule 53 (init_declarator)

    declaration	go to state 25
    declaration_specifiers	go to state 26
    type_specifier	go to state 14
    compound_statement	go to state 34
    declaration_list	go to state 35



state 24

    compound_statement  ->  '{' . '}'   (rule 86)
    compound_statement  ->  '{' . statement_list '}'   (rule 87)
    compound_statement  ->  '{' . declaration_list '}'   (rule 88)
    compound_statement  ->  '{' . declaration_list statement_list '}'   (rule 89)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    IF  	shift, and go to state 40
    WHILE	shift, and go to state 41
    DO  	shift, and go to state 42
    FOR 	shift, and go to state 43
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    ';' 	shift, and go to state 48
    '{' 	shift, and go to state 24
    '}' 	shift, and go to state 49

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 66
    declaration	go to state 25
    declaration_specifiers	go to state 26
    type_specifier	go to state 14
    statement	go to state 67
    compound_statement	go to state 68
    declaration_list	go to state 69
    statement_list	go to state 70
    expression_statement	go to state 71
    selection_statement	go to state 72
    iteration_statement	go to state 73



state 25

    declaration_list  ->  declaration .   (rule 90)

    $default	reduce using rule 90 (declaration_list)



state 26

    declaration  ->  declaration_specifiers . ';'   (rule 48)
    declaration  ->  declaration_specifiers . init_declarator_list ';'   (rule 49)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 11
    ';' 	shift, and go to state 20

    init_declarator_list	go to state 21
    init_declarator	go to state 22
    declarator	go to state 74
    direct_declarator	go to state 16



state 27

    function_definition  ->  declarator compound_statement .   (rule 107)

    $default	reduce using rule 107 (function_definition)



state 28

    declaration_list  ->  declaration_list . declaration   (rule 91)
    function_definition  ->  declarator declaration_list . compound_statement   (rule 106)

    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    '{' 	shift, and go to state 24

    declaration	go to state 75
    declaration_specifiers	go to state 26
    type_specifier	go to state 14
    compound_statement	go to state 76



state 29

    direct_declarator  ->  direct_declarator '(' . parameter_type_list ')'   (rule 67)
    direct_declarator  ->  direct_declarator '(' . identifier_list ')'   (rule 68)
    direct_declarator  ->  direct_declarator '(' . ')'   (rule 69)

    IDENTIFIER	shift, and go to state 77
    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    ')' 	shift, and go to state 78

    declaration_specifiers	go to state 79
    type_specifier	go to state 14
    parameter_type_list	go to state 80
    parameter_list	go to state 81
    parameter_declaration	go to state 82
    identifier_list	go to state 83



state 30

    direct_declarator  ->  '(' declarator ')' .   (rule 66)

    $default	reduce using rule 66 (direct_declarator)



state 31

    init_declarator_list  ->  init_declarator_list ',' . init_declarator   (rule 52)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 11

    init_declarator	go to state 84
    declarator	go to state 74
    direct_declarator	go to state 16



state 32

    declaration  ->  declaration_specifiers init_declarator_list ';' .   (rule 49)

    $default	reduce using rule 49 (declaration)



state 33

    init_declarator  ->  declarator '=' . initializer   (rule 54)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    '{' 	shift, and go to state 85

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 86
    initializer	go to state 87



state 34

    function_definition  ->  declaration_specifiers declarator compound_statement .   (rule 105)

    $default	reduce using rule 105 (function_definition)



state 35

    declaration_list  ->  declaration_list . declaration   (rule 91)
    function_definition  ->  declaration_specifiers declarator declaration_list . compound_statement   (rule 104)

    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    '{' 	shift, and go to state 24

    declaration	go to state 75
    declaration_specifiers	go to state 26
    type_specifier	go to state 14
    compound_statement	go to state 88



state 36

    primary_expression  ->  IDENTIFIER .   (rule 1)

    $default	reduce using rule 1 (primary_expression)



state 37

    primary_expression  ->  CONSTANT .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 38

    unary_expression  ->  INC_OP . unary_expression   (rule 8)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 89
    unary_operator	go to state 53



state 39

    unary_expression  ->  DEC_OP . unary_expression   (rule 9)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 90
    unary_operator	go to state 53



state 40

    selection_statement  ->  IF . '(' expression ')' statement   (rule 96)
    selection_statement  ->  IF . '(' expression ')' statement ELSE statement   (rule 97)

    '(' 	shift, and go to state 91



state 41

    iteration_statement  ->  WHILE . '(' expression ')' statement   (rule 98)

    '(' 	shift, and go to state 92



state 42

    iteration_statement  ->  DO . statement WHILE '(' expression ')' ';'   (rule 99)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    IF  	shift, and go to state 40
    WHILE	shift, and go to state 41
    DO  	shift, and go to state 42
    FOR 	shift, and go to state 43
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    ';' 	shift, and go to state 48
    '{' 	shift, and go to state 24

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 66
    statement	go to state 93
    compound_statement	go to state 68
    expression_statement	go to state 71
    selection_statement	go to state 72
    iteration_statement	go to state 73



state 43

    iteration_statement  ->  FOR . '(' expression_statement expression_statement expression ')' statement   (rule 100)

    '(' 	shift, and go to state 94



state 44

    primary_expression  ->  '(' . expression ')'   (rule 3)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 95



state 45

    unary_operator  ->  '+' .   (rule 11)

    $default	reduce using rule 11 (unary_operator)



state 46

    unary_operator  ->  '-' .   (rule 12)

    $default	reduce using rule 12 (unary_operator)



state 47

    unary_operator  ->  '!' .   (rule 13)

    $default	reduce using rule 13 (unary_operator)



state 48

    expression_statement  ->  ';' .   (rule 94)

    $default	reduce using rule 94 (expression_statement)



state 49

    compound_statement  ->  '{' '}' .   (rule 86)

    $default	reduce using rule 86 (compound_statement)



state 50

    postfix_expression  ->  primary_expression .   (rule 4)

    $default	reduce using rule 4 (postfix_expression)



state 51

    postfix_expression  ->  postfix_expression . INC_OP   (rule 5)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 6)
    unary_expression  ->  postfix_expression .   (rule 7)

    INC_OP	shift, and go to state 96
    DEC_OP	shift, and go to state 97

    $default	reduce using rule 7 (unary_expression)



state 52

    multiplicative_expression  ->  unary_expression .   (rule 14)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 40)

    MUL_ASSIGN	shift, and go to state 98
    DIV_ASSIGN	shift, and go to state 99
    ADD_ASSIGN	shift, and go to state 100
    SUB_ASSIGN	shift, and go to state 101
    '=' 	shift, and go to state 102

    $default	reduce using rule 14 (multiplicative_expression)

    assignment_operator	go to state 103



state 53

    unary_expression  ->  unary_operator . unary_expression   (rule 10)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 104
    unary_operator	go to state 53



state 54

    multiplicative_expression  ->  multiplicative_expression . '*' unary_expression   (rule 15)
    multiplicative_expression  ->  multiplicative_expression . '/' unary_expression   (rule 16)
    additive_expression  ->  multiplicative_expression .   (rule 17)

    '*' 	shift, and go to state 105
    '/' 	shift, and go to state 106

    $default	reduce using rule 17 (additive_expression)



state 55

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 18)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 19)
    shift_expression  ->  additive_expression .   (rule 20)

    '+' 	shift, and go to state 107
    '-' 	shift, and go to state 108

    $default	reduce using rule 20 (shift_expression)



state 56

    relational_expression  ->  shift_expression .   (rule 21)

    $default	reduce using rule 21 (relational_expression)



state 57

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 22)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 23)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 24)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 25)
    equality_expression  ->  relational_expression .   (rule 26)

    LE_OP	shift, and go to state 109
    GE_OP	shift, and go to state 110
    '<' 	shift, and go to state 111
    '>' 	shift, and go to state 112

    $default	reduce using rule 26 (equality_expression)



state 58

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 27)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 28)
    and_expression  ->  equality_expression .   (rule 29)

    EQ_OP	shift, and go to state 113
    NE_OP	shift, and go to state 114

    $default	reduce using rule 29 (and_expression)



state 59

    and_expression  ->  and_expression . '&' equality_expression   (rule 30)
    exclusive_or_expression  ->  and_expression .   (rule 31)

    '&' 	shift, and go to state 115

    $default	reduce using rule 31 (exclusive_or_expression)



state 60

    inclusive_or_expression  ->  exclusive_or_expression .   (rule 32)

    $default	reduce using rule 32 (inclusive_or_expression)



state 61

    logical_and_expression  ->  inclusive_or_expression .   (rule 33)

    $default	reduce using rule 33 (logical_and_expression)



state 62

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 34)
    logical_or_expression  ->  logical_and_expression .   (rule 35)

    AND_OP	shift, and go to state 116

    $default	reduce using rule 35 (logical_or_expression)



state 63

    logical_or_expression  ->  logical_or_expression . OR_OP logical_and_expression   (rule 36)
    conditional_expression  ->  logical_or_expression .   (rule 37)
    conditional_expression  ->  logical_or_expression . '?' expression ':' conditional_expression   (rule 38)

    OR_OP	shift, and go to state 117
    '?' 	shift, and go to state 118

    $default	reduce using rule 37 (conditional_expression)



state 64

    assignment_expression  ->  conditional_expression .   (rule 39)

    $default	reduce using rule 39 (assignment_expression)



state 65

    expression  ->  assignment_expression .   (rule 46)

    $default	reduce using rule 46 (expression)



state 66

    expression  ->  expression . ',' assignment_expression   (rule 47)
    expression_statement  ->  expression . ';'   (rule 95)

    ',' 	shift, and go to state 119
    ';' 	shift, and go to state 120



state 67

    statement_list  ->  statement .   (rule 92)

    $default	reduce using rule 92 (statement_list)



state 68

    statement  ->  compound_statement .   (rule 82)

    $default	reduce using rule 82 (statement)



state 69

    compound_statement  ->  '{' declaration_list . '}'   (rule 88)
    compound_statement  ->  '{' declaration_list . statement_list '}'   (rule 89)
    declaration_list  ->  declaration_list . declaration   (rule 91)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10
    IF  	shift, and go to state 40
    WHILE	shift, and go to state 41
    DO  	shift, and go to state 42
    FOR 	shift, and go to state 43
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    ';' 	shift, and go to state 48
    '{' 	shift, and go to state 24
    '}' 	shift, and go to state 121

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 66
    declaration	go to state 75
    declaration_specifiers	go to state 26
    type_specifier	go to state 14
    statement	go to state 67
    compound_statement	go to state 68
    statement_list	go to state 122
    expression_statement	go to state 71
    selection_statement	go to state 72
    iteration_statement	go to state 73



state 70

    compound_statement  ->  '{' statement_list . '}'   (rule 87)
    statement_list  ->  statement_list . statement   (rule 93)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    IF  	shift, and go to state 40
    WHILE	shift, and go to state 41
    DO  	shift, and go to state 42
    FOR 	shift, and go to state 43
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    ';' 	shift, and go to state 48
    '{' 	shift, and go to state 24
    '}' 	shift, and go to state 123

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 66
    statement	go to state 124
    compound_statement	go to state 68
    expression_statement	go to state 71
    selection_statement	go to state 72
    iteration_statement	go to state 73



state 71

    statement  ->  expression_statement .   (rule 83)

    $default	reduce using rule 83 (statement)



state 72

    statement  ->  selection_statement .   (rule 84)

    $default	reduce using rule 84 (statement)



state 73

    statement  ->  iteration_statement .   (rule 85)

    $default	reduce using rule 85 (statement)



state 74

    init_declarator  ->  declarator .   (rule 53)
    init_declarator  ->  declarator . '=' initializer   (rule 54)

    '=' 	shift, and go to state 33

    $default	reduce using rule 53 (init_declarator)



state 75

    declaration_list  ->  declaration_list declaration .   (rule 91)

    $default	reduce using rule 91 (declaration_list)



state 76

    function_definition  ->  declarator declaration_list compound_statement .   (rule 106)

    $default	reduce using rule 106 (function_definition)



state 77

    identifier_list  ->  IDENTIFIER .   (rule 75)

    $default	reduce using rule 75 (identifier_list)



state 78

    direct_declarator  ->  direct_declarator '(' ')' .   (rule 69)

    $default	reduce using rule 69 (direct_declarator)



state 79

    parameter_declaration  ->  declaration_specifiers . declarator   (rule 73)
    parameter_declaration  ->  declaration_specifiers .   (rule 74)

    IDENTIFIER	shift, and go to state 1
    '(' 	shift, and go to state 11

    $default	reduce using rule 74 (parameter_declaration)

    declarator	go to state 125
    direct_declarator	go to state 16



state 80

    direct_declarator  ->  direct_declarator '(' parameter_type_list . ')'   (rule 67)

    ')' 	shift, and go to state 126



state 81

    parameter_type_list  ->  parameter_list .   (rule 70)
    parameter_list  ->  parameter_list . ',' parameter_declaration   (rule 72)

    ',' 	shift, and go to state 127

    $default	reduce using rule 70 (parameter_type_list)



state 82

    parameter_list  ->  parameter_declaration .   (rule 71)

    $default	reduce using rule 71 (parameter_list)



state 83

    direct_declarator  ->  direct_declarator '(' identifier_list . ')'   (rule 68)
    identifier_list  ->  identifier_list . ',' IDENTIFIER   (rule 76)

    ')' 	shift, and go to state 128
    ',' 	shift, and go to state 129



state 84

    init_declarator_list  ->  init_declarator_list ',' init_declarator .   (rule 52)

    $default	reduce using rule 52 (init_declarator_list)



state 85

    initializer  ->  '{' . initializer_list '}'   (rule 78)
    initializer  ->  '{' . initializer_list ',' '}'   (rule 79)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    '{' 	shift, and go to state 85

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 86
    initializer	go to state 130
    initializer_list	go to state 131



state 86

    initializer  ->  assignment_expression .   (rule 77)

    $default	reduce using rule 77 (initializer)



state 87

    init_declarator  ->  declarator '=' initializer .   (rule 54)

    $default	reduce using rule 54 (init_declarator)



state 88

    function_definition  ->  declaration_specifiers declarator declaration_list compound_statement .   (rule 104)

    $default	reduce using rule 104 (function_definition)



state 89

    unary_expression  ->  INC_OP unary_expression .   (rule 8)

    $default	reduce using rule 8 (unary_expression)



state 90

    unary_expression  ->  DEC_OP unary_expression .   (rule 9)

    $default	reduce using rule 9 (unary_expression)



state 91

    selection_statement  ->  IF '(' . expression ')' statement   (rule 96)
    selection_statement  ->  IF '(' . expression ')' statement ELSE statement   (rule 97)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 132



state 92

    iteration_statement  ->  WHILE '(' . expression ')' statement   (rule 98)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 133



state 93

    iteration_statement  ->  DO statement . WHILE '(' expression ')' ';'   (rule 99)

    WHILE	shift, and go to state 134



state 94

    iteration_statement  ->  FOR '(' . expression_statement expression_statement expression ')' statement   (rule 100)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    ';' 	shift, and go to state 48

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 66
    expression_statement	go to state 135



state 95

    primary_expression  ->  '(' expression . ')'   (rule 3)
    expression  ->  expression . ',' assignment_expression   (rule 47)

    ')' 	shift, and go to state 136
    ',' 	shift, and go to state 119



state 96

    postfix_expression  ->  postfix_expression INC_OP .   (rule 5)

    $default	reduce using rule 5 (postfix_expression)



state 97

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 6)

    $default	reduce using rule 6 (postfix_expression)



state 98

    assignment_operator  ->  MUL_ASSIGN .   (rule 42)

    $default	reduce using rule 42 (assignment_operator)



state 99

    assignment_operator  ->  DIV_ASSIGN .   (rule 43)

    $default	reduce using rule 43 (assignment_operator)



state 100

    assignment_operator  ->  ADD_ASSIGN .   (rule 44)

    $default	reduce using rule 44 (assignment_operator)



state 101

    assignment_operator  ->  SUB_ASSIGN .   (rule 45)

    $default	reduce using rule 45 (assignment_operator)



state 102

    assignment_operator  ->  '=' .   (rule 41)

    $default	reduce using rule 41 (assignment_operator)



state 103

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 40)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 137



state 104

    unary_expression  ->  unary_operator unary_expression .   (rule 10)

    $default	reduce using rule 10 (unary_expression)



state 105

    multiplicative_expression  ->  multiplicative_expression '*' . unary_expression   (rule 15)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 138
    unary_operator	go to state 53



state 106

    multiplicative_expression  ->  multiplicative_expression '/' . unary_expression   (rule 16)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 139
    unary_operator	go to state 53



state 107

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 18)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 140
    unary_operator	go to state 53
    multiplicative_expression	go to state 141



state 108

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 19)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 140
    unary_operator	go to state 53
    multiplicative_expression	go to state 142



state 109

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 24)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 140
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 143



state 110

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 25)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 140
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 144



state 111

    relational_expression  ->  relational_expression '<' . shift_expression   (rule 22)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 140
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 145



state 112

    relational_expression  ->  relational_expression '>' . shift_expression   (rule 23)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 140
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 146



state 113

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 27)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 140
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 147



state 114

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 28)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 140
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 148



state 115

    and_expression  ->  and_expression '&' . equality_expression   (rule 30)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 140
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 149



state 116

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 34)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 140
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 150



state 117

    logical_or_expression  ->  logical_or_expression OR_OP . logical_and_expression   (rule 36)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 140
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 151



state 118

    conditional_expression  ->  logical_or_expression '?' . expression ':' conditional_expression   (rule 38)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 152



state 119

    expression  ->  expression ',' . assignment_expression   (rule 47)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 153



state 120

    expression_statement  ->  expression ';' .   (rule 95)

    $default	reduce using rule 95 (expression_statement)



state 121

    compound_statement  ->  '{' declaration_list '}' .   (rule 88)

    $default	reduce using rule 88 (compound_statement)



state 122

    compound_statement  ->  '{' declaration_list statement_list . '}'   (rule 89)
    statement_list  ->  statement_list . statement   (rule 93)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    IF  	shift, and go to state 40
    WHILE	shift, and go to state 41
    DO  	shift, and go to state 42
    FOR 	shift, and go to state 43
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    ';' 	shift, and go to state 48
    '{' 	shift, and go to state 24
    '}' 	shift, and go to state 154

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 66
    statement	go to state 124
    compound_statement	go to state 68
    expression_statement	go to state 71
    selection_statement	go to state 72
    iteration_statement	go to state 73



state 123

    compound_statement  ->  '{' statement_list '}' .   (rule 87)

    $default	reduce using rule 87 (compound_statement)



state 124

    statement_list  ->  statement_list statement .   (rule 93)

    $default	reduce using rule 93 (statement_list)



state 125

    parameter_declaration  ->  declaration_specifiers declarator .   (rule 73)

    $default	reduce using rule 73 (parameter_declaration)



state 126

    direct_declarator  ->  direct_declarator '(' parameter_type_list ')' .   (rule 67)

    $default	reduce using rule 67 (direct_declarator)



state 127

    parameter_list  ->  parameter_list ',' . parameter_declaration   (rule 72)

    CHAR	shift, and go to state 2
    SHORT	shift, and go to state 3
    INT 	shift, and go to state 4
    LONG	shift, and go to state 5
    SIGNED	shift, and go to state 6
    UNSIGNED	shift, and go to state 7
    FLOAT	shift, and go to state 8
    DOUBLE	shift, and go to state 9
    VOID	shift, and go to state 10

    declaration_specifiers	go to state 79
    type_specifier	go to state 14
    parameter_declaration	go to state 155



state 128

    direct_declarator  ->  direct_declarator '(' identifier_list ')' .   (rule 68)

    $default	reduce using rule 68 (direct_declarator)



state 129

    identifier_list  ->  identifier_list ',' . IDENTIFIER   (rule 76)

    IDENTIFIER	shift, and go to state 156



state 130

    initializer_list  ->  initializer .   (rule 80)

    $default	reduce using rule 80 (initializer_list)



state 131

    initializer  ->  '{' initializer_list . '}'   (rule 78)
    initializer  ->  '{' initializer_list . ',' '}'   (rule 79)
    initializer_list  ->  initializer_list . ',' initializer   (rule 81)

    ',' 	shift, and go to state 157
    '}' 	shift, and go to state 158



state 132

    expression  ->  expression . ',' assignment_expression   (rule 47)
    selection_statement  ->  IF '(' expression . ')' statement   (rule 96)
    selection_statement  ->  IF '(' expression . ')' statement ELSE statement   (rule 97)

    ')' 	shift, and go to state 159
    ',' 	shift, and go to state 119



state 133

    expression  ->  expression . ',' assignment_expression   (rule 47)
    iteration_statement  ->  WHILE '(' expression . ')' statement   (rule 98)

    ')' 	shift, and go to state 160
    ',' 	shift, and go to state 119



state 134

    iteration_statement  ->  DO statement WHILE . '(' expression ')' ';'   (rule 99)

    '(' 	shift, and go to state 161



state 135

    iteration_statement  ->  FOR '(' expression_statement . expression_statement expression ')' statement   (rule 100)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    ';' 	shift, and go to state 48

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 66
    expression_statement	go to state 162



state 136

    primary_expression  ->  '(' expression ')' .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 137

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 40)

    $default	reduce using rule 40 (assignment_expression)



state 138

    multiplicative_expression  ->  multiplicative_expression '*' unary_expression .   (rule 15)

    $default	reduce using rule 15 (multiplicative_expression)



state 139

    multiplicative_expression  ->  multiplicative_expression '/' unary_expression .   (rule 16)

    $default	reduce using rule 16 (multiplicative_expression)



state 140

    multiplicative_expression  ->  unary_expression .   (rule 14)

    $default	reduce using rule 14 (multiplicative_expression)



state 141

    multiplicative_expression  ->  multiplicative_expression . '*' unary_expression   (rule 15)
    multiplicative_expression  ->  multiplicative_expression . '/' unary_expression   (rule 16)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 18)

    '*' 	shift, and go to state 105
    '/' 	shift, and go to state 106

    $default	reduce using rule 18 (additive_expression)



state 142

    multiplicative_expression  ->  multiplicative_expression . '*' unary_expression   (rule 15)
    multiplicative_expression  ->  multiplicative_expression . '/' unary_expression   (rule 16)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 19)

    '*' 	shift, and go to state 105
    '/' 	shift, and go to state 106

    $default	reduce using rule 19 (additive_expression)



state 143

    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 24)

    $default	reduce using rule 24 (relational_expression)



state 144

    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 25)

    $default	reduce using rule 25 (relational_expression)



state 145

    relational_expression  ->  relational_expression '<' shift_expression .   (rule 22)

    $default	reduce using rule 22 (relational_expression)



state 146

    relational_expression  ->  relational_expression '>' shift_expression .   (rule 23)

    $default	reduce using rule 23 (relational_expression)



state 147

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 22)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 23)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 24)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 25)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 27)

    LE_OP	shift, and go to state 109
    GE_OP	shift, and go to state 110
    '<' 	shift, and go to state 111
    '>' 	shift, and go to state 112

    $default	reduce using rule 27 (equality_expression)



state 148

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 22)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 23)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 24)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 25)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 28)

    LE_OP	shift, and go to state 109
    GE_OP	shift, and go to state 110
    '<' 	shift, and go to state 111
    '>' 	shift, and go to state 112

    $default	reduce using rule 28 (equality_expression)



state 149

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 27)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 28)
    and_expression  ->  and_expression '&' equality_expression .   (rule 30)

    EQ_OP	shift, and go to state 113
    NE_OP	shift, and go to state 114

    $default	reduce using rule 30 (and_expression)



state 150

    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 34)

    $default	reduce using rule 34 (logical_and_expression)



state 151

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 34)
    logical_or_expression  ->  logical_or_expression OR_OP logical_and_expression .   (rule 36)

    AND_OP	shift, and go to state 116

    $default	reduce using rule 36 (logical_or_expression)



state 152

    conditional_expression  ->  logical_or_expression '?' expression . ':' conditional_expression   (rule 38)
    expression  ->  expression . ',' assignment_expression   (rule 47)

    ':' 	shift, and go to state 163
    ',' 	shift, and go to state 119



state 153

    expression  ->  expression ',' assignment_expression .   (rule 47)

    $default	reduce using rule 47 (expression)



state 154

    compound_statement  ->  '{' declaration_list statement_list '}' .   (rule 89)

    $default	reduce using rule 89 (compound_statement)



state 155

    parameter_list  ->  parameter_list ',' parameter_declaration .   (rule 72)

    $default	reduce using rule 72 (parameter_list)



state 156

    identifier_list  ->  identifier_list ',' IDENTIFIER .   (rule 76)

    $default	reduce using rule 76 (identifier_list)



state 157

    initializer  ->  '{' initializer_list ',' . '}'   (rule 79)
    initializer_list  ->  initializer_list ',' . initializer   (rule 81)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    '{' 	shift, and go to state 85
    '}' 	shift, and go to state 164

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 86
    initializer	go to state 165



state 158

    initializer  ->  '{' initializer_list '}' .   (rule 78)

    $default	reduce using rule 78 (initializer)



state 159

    selection_statement  ->  IF '(' expression ')' . statement   (rule 96)
    selection_statement  ->  IF '(' expression ')' . statement ELSE statement   (rule 97)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    IF  	shift, and go to state 40
    WHILE	shift, and go to state 41
    DO  	shift, and go to state 42
    FOR 	shift, and go to state 43
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    ';' 	shift, and go to state 48
    '{' 	shift, and go to state 24

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 66
    statement	go to state 166
    compound_statement	go to state 68
    expression_statement	go to state 71
    selection_statement	go to state 72
    iteration_statement	go to state 73



state 160

    iteration_statement  ->  WHILE '(' expression ')' . statement   (rule 98)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    IF  	shift, and go to state 40
    WHILE	shift, and go to state 41
    DO  	shift, and go to state 42
    FOR 	shift, and go to state 43
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    ';' 	shift, and go to state 48
    '{' 	shift, and go to state 24

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 66
    statement	go to state 167
    compound_statement	go to state 68
    expression_statement	go to state 71
    selection_statement	go to state 72
    iteration_statement	go to state 73



state 161

    iteration_statement  ->  DO statement WHILE '(' . expression ')' ';'   (rule 99)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 168



state 162

    iteration_statement  ->  FOR '(' expression_statement expression_statement . expression ')' statement   (rule 100)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 169



state 163

    conditional_expression  ->  logical_or_expression '?' expression ':' . conditional_expression   (rule 38)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 140
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 170



state 164

    initializer  ->  '{' initializer_list ',' '}' .   (rule 79)

    $default	reduce using rule 79 (initializer)



state 165

    initializer_list  ->  initializer_list ',' initializer .   (rule 81)

    $default	reduce using rule 81 (initializer_list)



state 166

    selection_statement  ->  IF '(' expression ')' statement .   (rule 96)
    selection_statement  ->  IF '(' expression ')' statement . ELSE statement   (rule 97)

    ELSE	shift, and go to state 171

    ELSE	[reduce using rule 96 (selection_statement)]
    $default	reduce using rule 96 (selection_statement)



state 167

    iteration_statement  ->  WHILE '(' expression ')' statement .   (rule 98)

    $default	reduce using rule 98 (iteration_statement)



state 168

    expression  ->  expression . ',' assignment_expression   (rule 47)
    iteration_statement  ->  DO statement WHILE '(' expression . ')' ';'   (rule 99)

    ')' 	shift, and go to state 172
    ',' 	shift, and go to state 119



state 169

    expression  ->  expression . ',' assignment_expression   (rule 47)
    iteration_statement  ->  FOR '(' expression_statement expression_statement expression . ')' statement   (rule 100)

    ')' 	shift, and go to state 173
    ',' 	shift, and go to state 119



state 170

    conditional_expression  ->  logical_or_expression '?' expression ':' conditional_expression .   (rule 38)

    $default	reduce using rule 38 (conditional_expression)



state 171

    selection_statement  ->  IF '(' expression ')' statement ELSE . statement   (rule 97)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    IF  	shift, and go to state 40
    WHILE	shift, and go to state 41
    DO  	shift, and go to state 42
    FOR 	shift, and go to state 43
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    ';' 	shift, and go to state 48
    '{' 	shift, and go to state 24

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 66
    statement	go to state 174
    compound_statement	go to state 68
    expression_statement	go to state 71
    selection_statement	go to state 72
    iteration_statement	go to state 73



state 172

    iteration_statement  ->  DO statement WHILE '(' expression ')' . ';'   (rule 99)

    ';' 	shift, and go to state 175



state 173

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' . statement   (rule 100)

    IDENTIFIER	shift, and go to state 36
    CONSTANT	shift, and go to state 37
    INC_OP	shift, and go to state 38
    DEC_OP	shift, and go to state 39
    IF  	shift, and go to state 40
    WHILE	shift, and go to state 41
    DO  	shift, and go to state 42
    FOR 	shift, and go to state 43
    '(' 	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    '!' 	shift, and go to state 47
    ';' 	shift, and go to state 48
    '{' 	shift, and go to state 24

    primary_expression	go to state 50
    postfix_expression	go to state 51
    unary_expression	go to state 52
    unary_operator	go to state 53
    multiplicative_expression	go to state 54
    additive_expression	go to state 55
    shift_expression	go to state 56
    relational_expression	go to state 57
    equality_expression	go to state 58
    and_expression	go to state 59
    exclusive_or_expression	go to state 60
    inclusive_or_expression	go to state 61
    logical_and_expression	go to state 62
    logical_or_expression	go to state 63
    conditional_expression	go to state 64
    assignment_expression	go to state 65
    expression	go to state 66
    statement	go to state 176
    compound_statement	go to state 68
    expression_statement	go to state 71
    selection_statement	go to state 72
    iteration_statement	go to state 73



state 174

    selection_statement  ->  IF '(' expression ')' statement ELSE statement .   (rule 97)

    $default	reduce using rule 97 (selection_statement)



state 175

    iteration_statement  ->  DO statement WHILE '(' expression ')' ';' .   (rule 99)

    $default	reduce using rule 99 (iteration_statement)



state 176

    iteration_statement  ->  FOR '(' expression_statement expression_statement expression ')' statement .   (rule 100)

    $default	reduce using rule 100 (iteration_statement)



state 177

    $   	go to state 178



state 178

    $   	go to state 179



state 179

    $default	accept
